
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    
    include conf/sites-enabled/*.conf;

    server {
        listen 443 ssl;
        server_name localhost;


        location /contract/ {
            rewrite ^/contract(.*) /$1 break;
            proxy_pass https://dev1.magnalane.com;
        }
    }

    server {
        listen       9999;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

       # location / {
       #     root   html;
       #     index  index.html index.htm;
       # }
		
		location / {
            proxy_pass http://127.0.0.1:3000;
        }
        
        location /blog/ {
            rewrite ^/blog(.*) /$1 break;
            proxy_pass http://127.0.0.1:4444;
        }

        location /mail/ {
            rewrite ^/mail(.*) /$1 break;
            proxy_pass http://127.0.0.1:5555;
        }

        location /zinki/ {
            rewrite ^/zinki(.*) /$1 break;
            proxy_pass http://www.zinkiwiki.net;
        }

        location /magna/ {
            rewrite ^/magna(.*) /$1 break;
            proxy_pass http://www.magnalane.com;
        }

        location /cont/ {
            rewrite ^/magna(.*) /$1 break;
            proxy_pass http://www.magnalane.com;
        }
        

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # #this has a problem using port 80
    # server {
    #     listen *:80;
    #     server_name helloworld.com www.helloworld.com;
    #     root H:\work\docroot\helloworld.com;
    #     index index.html;
    # }
   

   # load balancing can happen when configuring 
   # the upstream block which includes a list of servers
   # 
   upstream myproject {
          server 127.0.0.1:3000;   #node app on port 3000
          server 127.0.0.1:4444  weight=3; #node app on port 4444
          server 127.0.0.1:5555;        #node app on port 5555
    }

    upstream myworld {
          server 127.0.0.1:80;        #node app on port 80    localhost
    }

    server {
        listen 7777;
        server_name localhost;
        location / {
            proxy_pass http://myproject;
        }

        location /nginxroot/ {
            proxy_pass http://myworld;
        }
    }

    # reverse proxy
    server {
            listen 8999;
            server_name helloworld.com;
            location / {
            proxy_pass http://localhost/nginxroot/;
        }
    }
  
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
